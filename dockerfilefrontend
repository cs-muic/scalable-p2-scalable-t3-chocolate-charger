# FROM node:16 as builder
# ## Stage 1: Build the frontend

# CMD mkdir /app

# ## Set the working directory
# WORKDIR /app

# ## Copy the package specifications
# # COPY frontend-react/my-app/package*.json frontend-react/my-app/webpack*.js ./
# COPY frontend-react/my-app ./
# ## Install all relevant dependencies
# RUN npm install
# RUN npm run build
# # nginx state for serving content
# FROM nginx:1.15
# # Set working directory to nginx asset directory
# WORKDIR /usr/share/nginx/html
# # Remove default nginx static assets
# # RUN rm -rf ./*
# # Copy static assets from builder stage
# COPY --from=builder /app/build .
# # Containers run nginx with global directives and daemon off
# ENTRYPOINT ["nginx", "-g", "daemon off;"]


# COMMAND TO RUN in LOCAL #
# docker build -f dockerfilefrontend -t p2-frontend .
# docker run --rm -it -p 8080:80 p2-frontend 
##################################################
FROM node:12.2.0-alpine as react_build 
#also say 
WORKDIR /app
#copy the react app to the container
COPY frontend-react/my-app /app/ 

# #prepare the contiainer for building react 
RUN npm install
# RUN npm install react-scripts@3.0.1 -g --silent 
RUN npm run build 

#prepare nginx
FROM nginx:1.16.0-alpine

COPY --from=react_build /app/build /usr/share/nginx/html
RUN rm /etc/nginx/conf.d/default.conf


#fire up nginx
EXPOSE 80 
CMD ["nginx","-g","daemon off;"]